2013.10.3

Try to understand how does tactic server send command to the simulator, the whole progress cycle

strategy_thread.cpp

struct RunStatus
{
    RUNSTATUSTYPE Status;		
    STRATEGYTYPE StrategyIndex;	
    double dFreq;				
    char * tactic_name_;
};

QString sTactics[5];

char guitacticsbuf[1000];

Tactic *gui_tactics[MAX_TEAM_ROBOTS] = { NULL, NULL, NULL, NULL, NULL};

QString sTactics[5];
Tactic *tactics[MAX_TEAM_ROBOTS];
Tactic *RunGui_tactics[MAX_TEAM_ROBOTS] = { NULL, NULL, NULL, NULL, NULL};


now/LATENDCY_DELAY

todo: what is Robot::RobotCommand,World, 

continue tommorrow: Status Robot::run in field_world_robot

=================================================================================================

2013.10.7

Class World contains the current situation of the field, including Class Robot 


//==== Obstacle Flags ====//

// Standard Obstacles
const int OBS_BALL=(1 << 0);
const int OBS_WALLS=(1 << 1);

//oponent obstacles
const int OBS_THEIR_DZONE=(1 << 2);

//team obstacles
const int OBS_OUR_DZONE=(1 << 3);

const int OBS_TEAMMATES=((1 << MAX_TEAM_ROBOTS) - 1) <<  4;
const int OBS_OPPONENTS=((1 << MAX_TEAM_ROBOTS) - 1) << (4 + MAX_TEAM_ROBOTS);
const int OBS_EVERYTHING=~((int) 0);
const int OBS_EVERYTHING_BUT_US=OBS_EVERYTHING & (~(OBS_TEAMMATES));
const int OBS_EVERYTHING_BUT_BALL=OBS_EVERYTHING & (~(OBS_BALL));

inline int OBS_TEAMMATE(int id)
{
        if (id<0 || id>=4)return 0;
        else
        {
                return 1 << (4 + id);
        }
};
//#define OBS_TEAMMATE(id) (1 << (4 + id))
#define OBS_OPPONENT(id) (1 << (4 + MAX_TEAM_ROBOTS + id))
#define OBS_EVERYTHING_BUT_ME(id) (OBS_EVERYTHING & (~(OBS_TEAMMATE(id))))

the robot didn't go to the target place.
TODO: try to resolve this problem

=================================================================================================

2013.10.8

