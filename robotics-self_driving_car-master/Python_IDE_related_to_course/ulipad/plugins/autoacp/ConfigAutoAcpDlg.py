# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Fri Oct 24 15:53:51 2008

import wx
from os.path import basename, splitext

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

def langname_to_fname(acp_fnames):
    'Return a list of (langname, fname) tuples.'
    l = []
    for fnm in acp_fnames:
        langname = basename(fnm)
        langname = splitext(langname)[0]
        l.append((langname, fnm))
    return l

class ConfigAutoAcpDlg(wx.Dialog):
    def __init__(self, *args, **kwds):
        self.all_acps = kwds.pop('all_acps')
        self.ln_to_fn = dict(langname_to_fname(self.all_acps))
        parent_choices = self.ln_to_fn.keys()
        parent_choices.sort()

        # installed_acps maps ACP -> [SUBACP, SUBACP, SUBACP]
        self.installed_acps = kwds.pop('installed_acps', {})

        # begin wxGlade: ConfigAutoAcpDlg.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Map Your Auto ACP's")
        self.label_2 = wx.StaticText(self, -1, "When Using This ACP:")
        self.parent_choice = wx.Choice(self, -1,  choices=parent_choices)
        self.label_3 = wx.StaticText(self, -1, "Also Use These ACP's")
        self.sub_acp_lst = wx.ListBox(self, -1, choices=[],
                                      style=wx.LB_MULTIPLE)
        self.ok_btn = wx.Button(self, -1, "OK")
        self.cancel_btn = wx.Button(self, -1, "Cancel")
        self.clear_sub_acp_btn = wx.Button(self, -1, 'Clear')
        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.SetTitle('Configure Auto ACP')
        self.parent_choice.Bind(wx.EVT_CHOICE, self.on_parent_choice)
        self.parent_choice.Select(0)
        # Tracks the previous parent choice.
        self.previous_parent = self.parent_acp
        self.on_parent_choice(None)

        self.ok_btn.Bind(wx.EVT_BUTTON, self.on_ok)
        self.cancel_btn.Bind(wx.EVT_BUTTON, lambda x: self.EndModal(wx.CANCEL))
        self.clear_sub_acp_btn.Bind(wx.EVT_BUTTON,
                                    lambda x: self.sub_acp_lst.DeselectAll())

    def _get_parent_acp(self):
        return self.parent_choice.GetStringSelection()
    parent_acp = property(_get_parent_acp)

    def _get_sub_acps(self):
        l = []
        for idx in self.sub_acp_lst.GetSelections():
            l.append(self.sub_acp_lst.GetString(idx))
        return l
    sub_acps = property(_get_sub_acps)

    def on_ok(self, e):
        self.update_installed_acps(self.parent_acp)
        self.EndModal(wx.OK)

    def on_parent_choice(self, e):
        # Update the current ACP's sub acp's.
        if e is not None:
            self.update_installed_acps(self.previous_parent)

            # The current parent, will be the previous when this event handler
            # is next called.
            self.previous_parent = self.parent_acp

        # Build a list of available SUB ACP's.
        sub_acps = self.ln_to_fn.keys()
        sub_acps.remove(self.parent_choice.GetStringSelection())
        sub_acps.sort()
        self.sub_acp_lst.Clear()
        self.sub_acp_lst.InsertItems(sub_acps, 0)
        self.mark_sub_acps()

    def mark_sub_acps(self):
        # Select any languages that have been previously assigned as sub acp's
        # for the current language.
        sub_acps_to_mark = self.installed_acps.get(self.parent_acp, [])
        sub_acps = self.sub_acp_lst.GetStrings()
        for sub_acp in sub_acps_to_mark:
            i = sub_acps.index(sub_acp)
            self.sub_acp_lst.Select(i)

    def update_installed_acps(self, parent_acp):
        # For each selected sub_acp, add it to the installed_acp entry for the
        # current parent_acp.
        self.installed_acps[parent_acp] = self.sub_acps

    def __set_properties(self):
        # begin wxGlade: ConfigAutoAcpDlg.__set_properties
        self.SetTitle("dialog_1")
        self.SetSize((466, 352))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ConfigAutoAcpDlg.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.label_1, 1, 0, 0)
        sizer_3.Add(self.label_2, 0, 0, 0)
        sizer_3.Add(self.parent_choice, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_4.Add(self.label_3, 1, 0, 0)
        sizer_4.Add(self.sub_acp_lst, 9, wx.EXPAND, 0)
        sizer_4.Add(self.clear_sub_acp_btn, 1, 0, 0)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 8, wx.EXPAND, 0)
        btn_szr = wx.BoxSizer(wx.HORIZONTAL)
        btn_szr.Add(self.ok_btn, 0)
        btn_szr.Add(self.cancel_btn, 0)
        sizer_1.Add(btn_szr)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class ConfigAutoAcpDlg


